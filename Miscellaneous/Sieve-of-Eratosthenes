//Sieve of Eratosthenes
//Find all primes smaller than n (n<10000000)
#include<iostream>
#include<vector>

using namespace std;

void SOE(long int n)
{
    vector<bool> prime(n+1, true); //Create a boolean array initialize all its enetries as true
    for(long int i =2;i*i<=n;i++)
    {        
        if(prime[i]==true)
        {
            //Mark all the multiple of i as composite
            for(long int j = i*i;j<=n;j+=i)
            {
                prime[j]=false;
            }
        }
    }
    
    //Print all prime numbers between 1 and N
    for (int i = 2; i <= n; i++)
    {
        if (prime[i])
        {
            cout<<i<< " ";
        }
    }
}

//Driver Code
int main()
{
    long int N = 40;
    cout<<"Prime numbers in the range [1,"<<N<<"]"<<endl;
    SOE(N); //Function call
    return 0;
}
